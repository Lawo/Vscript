"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const multi_connection_1=require("../../common/multi_connection"),api_base_1=require("./api_base"),Pervasives=require("../pervasives"),prando_1=require("prando"),pervasives_1=require("../pervasives");let state_cache={};async function get_build_info(e){let t=await multi_connection_1.get().get_connection_or_default({ip:e});return JSON.parse(await t.get_file("data/build_info.json"))}async function get_state_description(e){let t=await multi_connection_1.get().get_connection_or_default({ip:e});const n=await get_build_info(e);if(null===n)return api_base_1.error(`unable to obtain build info from ${t.connection_pars.ip}`),null;const r=await(async()=>n&&n.commit&&!n.commit.match(/\+$/)?n.commit:void 0)();if(void 0!==r&&state_cache.hasOwnProperty(r))return state_cache[r];try{const e=(await t.get_file("debug_data.js")).split("\n");let a="",o="",s=0;for(let t=0;t<e.length;++t){const n=e[t];if(0!==t)if(n.match(/^state = /))s=1,o+=n.replace(/^state = /,"").trim();else{if(n.match(/^settings_categories = /))break;0===s?a+="\n"+n.trim():o+="\n"+n.trim()}else a+=n.replace(/^typedefs = /,"").trim()}const i=e=>JSON.parse(e.substr(0,e.length-1)),_={build_info:n,typedefs:i(a),state:i(o)};return void 0!==r&&(state_cache[r]=_),_}catch(e){return null}}async function count_keywords(e,t,n){let r=0;const a=async(t,r)=>{let s=0;for(let i of t.children)if(!n(i,r))switch(i.data_type){case"subtree":{const t=Pervasives.path_concat(r,i.sys_name);if(void 0!==i.table_size){const n=await e.allocated_indices(t);for(let e of n)s+=await a(i,Pervasives.attach_index(t,e))}else if(void 0!==i.array_size)for(let e=0;e<i.array_size;++e)s+=await a(i,Pervasives.attach_index(t,e));else s+=await a(i,t)}break;default:s+=(o=i,(()=>{switch(o.kw_type){case"event":case"driver-owned event":return 0;case"command":case"status":return 1;case"duplex":return 2}})())}return s};var o;for(let e of t.state)n(e,null)||(r+=await a(e,e.sys_name));return r}function get_child_description(e,t){const n=t.split(".");for(const r of e.state)if(r.sys_name===n[0]){let e=r;if(1===n.length)return e;for(let r=1;r<n.length-1;++r)for(const a of e.children)if(a.sys_name===n[r]){if("subtree"===a.data_type){e=a;break}throw`Unable to look up ${t}`}const a=n[n.length-1].replace(/_(command|status)$/,"");for(const t of e.children)if(t.sys_name===n[n.length-1]&&"subtree"===t.data_type||"subtree"!==t.data_type&&("duplex"===t.kw_type&&t.sys_name===a||"duplex"!==t.kw_type&&t.sys_name===n[n.length-1]))return t}throw`Unable to find node '${t}'`}function get_keyword_description(e,t,n){const r=get_child_description(e,Pervasives.path_concat(t,n));if("subtree"===r.data_type)throw"Mistyped result (should have been a keyword, but is a subtree)";return r}function get_subtree_description(e,t){const n=get_child_description(e,t);if("subtree"!==n.data_type)throw"Mistyped result (should have been a subtree)";return n}exports.get_build_info=get_build_info,exports.get_state_description=get_state_description,exports.count_keywords=count_keywords,exports.get_child_description=get_child_description,exports.get_keyword_description=get_keyword_description,exports.get_subtree_description=get_subtree_description;let rng=new prando_1.default;function seed_prng(e){rng=new prando_1.default(e)}function maybe_nulled(e,t){return t&&rng.nextBoolean()?null:e}function random_number(e,t,n){const r=!n||void 0===n.prefer_boundaries||n.prefer_boundaries;return!(!n||!n.nullable)&&n.nullable&&rng.nextBoolean()?null:r&&rng.nextBoolean()?e<0&&t>0&&rng.next()<.33?0:rng.nextBoolean()?e:t:rng.next(e,t)}function random_int(e,t,n){const r=random_number(e,t,n);return null===r?null:Math.round(r)}function random_value(e,t){return maybe_nulled(rng.nextArrayItem(e),t)}function random_enum(e,t){return random_value(e,t)}function augment_state(e){const t=Object.keys(e.typedefs),n=e=>{let r=Object.assign({},e,{parent:void 0,children:[],reference_target_counts:{}});const a=(e,t)=>{r.reference_target_counts.hasOwnProperty(e)||(r.reference_target_counts[e]=0),r.reference_target_counts[e]+=t},o=e=>void 0!==e.array_size?e.array_size:void 0!==e.table_size?e.table_size:1;let s=[];for(let r of e.children)switch(r.data_type){case"subtree":t.includes(r.type_identifier)&&a(r.type_identifier,o(r));const e=n(r);for(let t in e.reference_target_counts)a(t,o(r));s.push(e);break;default:s.push(r)}return r.children=s,r};let r=[];for(let t of e.state){const e=n(t);r.push(Object.assign({},t,e,{parent:void 0}))}return Object.assign({},e,{state:r})}exports.seed_prng=seed_prng,exports.random_number=random_number,exports.random_int=random_int,exports.random_value=random_value,exports.random_enum=random_enum,exports.augment_state=augment_state;class DetermineFromState{constructor(e){this.state_desc=e}}async function is_live(e,t,n){const r=(t,n)=>{for(let e of t.children)if("subtree"===e.data_type&&e.sys_name===Pervasives.remove_trailing_index(n))return e;throw`unable to resolve ${e}`},a=t.state_desc.state,o=e.split("."),s=a.find(e=>e.sys_name===o[0]);let i=s,_=o[0],c=await multi_connection_1.get().get_connection_or_default(n);if(await c.component_is_online(o[0],{mode:"check"}))return!1;for(let e=1;e<o.length;++e){const t=r(i,o[e]),n=t;if(void 0!==n){const t=Pervasives.path_concat(_,pervasives_1.remove_trailing_index(o[e]));if(!await c.is_allocated(t,e))return!1}_=Pervasives.path_concat(_,o[e]),i=n}return!0}function random_reference(e,t,n){const r=pervasives_1.component_name(t),a=(()=>{for(let e of n.augmented_components)if(e.sys_name===r)return e.owning_module})();if(void 0===a)throw`Unable to determine hosting module of keyword list '${t}'`;let o=0;const s=e=>"non-mutating"===n.ref_perm||e.owning_module===a;for(let t of n.augmented_components)s(t)&&(o+=t.reference_target_counts[e]||0);if(rng.next()<n.null_probability)return null;let i=rng.nextInt(0,o-1),_=(()=>{for(let t of n.augmented_components)if(s(t)){const n=t.reference_target_counts[e]||0;if(n>i)return t;i-=n}})(),c=_.sys_name;const u=(t,n,r)=>{if(n&&(t.array_size||t.table_size)){const n=t.reference_target_counts[e]||1,a=Math.floor(r/n);c=Pervasives.attach_index(c,a),u(t,!1,r-n*a)}else{let n=r;const a=(()=>{if(t.type_identifier===e)return t;for(let r of t.children)if(r.data_type,"subtree"===r.data_type&&(r.reference_target_counts.hasOwnProperty(e)||r.type_identifier===e)){const t=r.array_size||r.table_size||1,a=(r.reference_target_counts[e]||1)*t;if(n<a)return r;n-=a}})(),o=a;c=t.array_size||t.table_size?c:Pervasives.path_concat(c,o.sys_name),o!==t&&u(o,!0,n)}};return u(_,!1,i),c}function random_content(e,t,n,r){const a=!r||void 0===r.prefer_boundaries||r.prefer_boundaries,o=t.optional;switch(t.data_type){case"bool":return random_value([!1,!0],o);case"device_tree_node":return;case"enum":return random_value(t.enum_values,o);case"float":return random_number(t.min,t.max,{prefer_boundaries:a,nullable:o});case"int":return random_int(t.min,t.max,{prefer_boundaries:a,nullable:o});case"int duration":{const e=Pervasives.string_duration_to_seconds(t.min,!1),n=Pervasives.string_duration_to_seconds(t.max,!1);return random_int(Math.round(1e9*e),Math.round(1e9*n),{prefer_boundaries:a,nullable:o})}case"float duration":{const e=Pervasives.string_duration_to_seconds(t.min,!1),n=Pervasives.string_duration_to_seconds(t.max,!1);return random_number(e,n,{prefer_boundaries:a,nullable:o})}case"ipaddress":return[[1,255],[0,255],[0,255],[0,255]].map(e=>`${random_int(e[0],e[1],{nullable:!1})}`).join(".");case"ref":return random_reference(t.target_type_identifier,e,{ref_perm:t.ref_perm,augmented_components:n,null_probability:.5});case"string":return rng.nextString(t.max_length);case"timecode":case"timestamp":return}}function random_indices(e){let t=Array.from(Array(e.table_size).keys()),n=[];for(;n.length<e.n;){const e=rng.nextInt(0,t.length-1);n.push(t[e]),t=t.splice(e,1)}return n}exports.DetermineFromState=DetermineFromState,exports.is_live=is_live,exports.random_reference=random_reference,exports.random_content=random_content,exports.random_indices=random_indices;