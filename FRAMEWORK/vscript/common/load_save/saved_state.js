"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const pervasives_1=require("../pervasives"),multi_connection_1=require("../multi_connection"),calling_conventions_1=require("../load_save/calling_conventions"),load_workspace_1=require("../load_save/load_workspace"),saved_subtrees_1=require("../load_save/saved_subtrees");class SavedState{constructor(e,t,n){this.format=e,this.header=t,this.components=n}static lift(e){let t={};for(let n in e.components)"arkona_internal_module_registry"!==n&&(t[n]=saved_subtrees_1.SavedAnonymousSubtree.lift(n,e.components[n]));return new SavedState(e.format,e.header,t)}map(e){const t=calling_conventions_1.reify_map_parameters(e);let n={};for(const e in this.components){let a=t.f_kwl({full_kwl_name:e,name:e,data:this.components[e]});void 0!==a&&(0!==t.recursion_depth&&((a=a.map(Object.assign({},t,{recursion_depth:t.recursion_depth-1}))).empty()||(n[e]=a)))}return new SavedState(this.format,this.header,n)}filter(e){const t=calling_conventions_1.reify_filter_parameters(e);let n={};for(const e in this.components){const a=t.f_kwl({full_kwl_name:e,name:e,data:this.components[e]});if(!0===a){n[e]=this.components[e];continue}if(!1===a)continue;if(0===t.recursion_depth)continue;const s=this.components[e].filter(Object.assign({},t,{recursion_depth:t.recursion_depth-1}));s.empty()||(n[e]=s)}return new SavedState(this.format,this.header,n)}read(e){const[t,n]=[pervasives_1.path_hd(e),pervasives_1.path_tl(e)];if(this.components.hasOwnProperty(t))return this.components[t].read(n,t)}async scaffold(e){let t=await multi_connection_1.get().get_connection_or_default({ip:e.ip}),n=e.workspace||await load_workspace_1.LoadWorkspace.create({ip:e.ip}),a={connection:t,workspace:n,unnamed_row_creators:e.unnamed_row_creators||{},unnamed_row_deleters:e.unnamed_row_deleters||{},reuse_named_rows:calling_conventions_1.reuse_named_rows(e)};return await Promise.all(Object.entries(this.components).map(([e,t])=>t.scaffold(e,a))),n}async undump(e){let t=await multi_connection_1.get().get_connection_or_default({ip:e.ip}),n={skip_defaults:calling_conventions_1.skip_defaults(e),connection:t,workspace:e.workspace,disambiguate_duplex:e.disambiguate_duplex};const a=Object.entries(this.components).map(([e,t])=>t.undump(n));await Promise.all(a)}split(e){const t=calling_conventions_1.reify_filter_parameters(e),n=Object.assign({},e,{f_kwl:e=>{const n=t.f_kwl(e);return void 0===n?void 0:!n},f_kw:e=>{const n=t.f_kw(e);return void 0===n?void 0:!n}});return[this.filter(t),this.filter(n)]}apply_relocations(e){let t={};const n=e.get_nested_relocations().nested||{},a=(e,n)=>{if(t.hasOwnProperty(e))throw`Renaming conflict: component '${e}' already taken`;t[e]=n};for(const e in this.components){const t=(n[e]||{}).hasOwnProperty("new_local_name")?n[e].new_local_name:e;a(t,this.components[e].apply_relocations(t,n[e]||{}))}return new SavedState(this.format,this.header,t).map({f_kw:t=>{const n=pervasives_1.remove_all_indices(t.full_kwl_name),a=e.get_keyword_description(n,t.name);let s=t.data;if("ref"===a.data_type&&null!==t.data){const n=e.translate(t.data);n!==t.data&&(s=n)}return s}})}diff(e){let t={only_in_old:new SavedState(this.format,this.header,{}),only_in_new:new SavedState(e.new_state.format,e.new_state.header,{}),modified:new SavedState(e.new_state.format,e.new_state.header,{}),unmodified:new SavedState(this.format,this.header,{})};const n=e.equal||((e,t,n,a)=>null===n?null===a:null===n.data?null===a.data:"object"==typeof n.data?JSON.stringify(n.data)===JSON.stringify(a.data):n.data===a.data),a=(e,n,a)=>{a.empty()||(t[e].components.hasOwnProperty(n)?t[e].components[n]=t[e].components[n].merge(a):t[e].components[n]=a)};for(const t in this.components)if(e.new_state.components.hasOwnProperty(t)){const s=this.components[t].diff(e.new_state.components[t],n);a("only_in_old",t,s.only_in_old),a("only_in_new",t,s.only_in_new),a("modified",t,s.modified),a("unmodified",t,s.unmodified)}else a("only_in_old",t,this.components[t]);for(const t in e.new_state.components)this.components.hasOwnProperty(t)||a("only_in_new",t,e.new_state.components[t]);return t}empty(){for(const e in this.components)if(!this.components[e].empty())return!1;return!0}rename_kwls(e,t){const n=t.fork();let a={};return this.filter({f_kwl:t=>{const n=e(t.full_kwl_name);n!==t.full_kwl_name&&(a[t.full_kwl_name]=n)}}),Object.entries(a).forEach(([e,t])=>{n.register_kwl_relocation(e,t)}),this.apply_relocations(n)}user_owned(e){return this.filter({f_kw:t=>{const n=pervasives_1.remove_all_indices(t.full_kwl_name);return"command"===e.get_keyword_description(n,t.name).kw_type||"duplex"===e.get_keyword_description(n,t.name).kw_type&&null!==t.name.match(/_status$/)}})}user_owned_or_duplex(e){return this.filter({f_kw:e=>!0})}persistent_parts(e){return this.filter({f_kw:t=>{const n=pervasives_1.remove_all_indices(t.full_kwl_name);return!0===e.get_keyword_description(n,t.name).persistent}})}component(e,t){if(!(()=>{for(const n of e.state_description.state)if(n.sys_name===t)return!0;return!1})())throw`Unknown component '${t}'`;return this.components.hasOwnProperty(t)?new SavedState(this.format,this.header,{[t]:this.components[t]}):new SavedState(this.format,this.header,{[t]:saved_subtrees_1.SavedAnonymousSubtree.lift(t,{})})}static check_match(e,t){for(const n of t)if(n instanceof RegExp){if(null!==e.match(n))return!0}else if(e===n)return!0}extract_kwls(e){const t=Array.isArray(e)?e:[e];return this.split({f_kwl:e=>SavedState.check_match(e.full_kwl_name,t)})}extract_kws(e){const t=Array.isArray(e)?e:[e];return this.split({f_kw:e=>SavedState.check_match(pervasives_1.path_concat(e.full_kwl_name,e.name),t)||!1})}extract(e){const t=Array.isArray(e)?e:[e];return this.split({f_kwl:e=>SavedState.check_match(e.full_kwl_name,t),f_kw:e=>SavedState.check_match(pervasives_1.path_concat(e.full_kwl_name,e.name),t)||!1})}iter(e){const t=e.f_kwl||(e=>{}),n=e.f_kw||(e=>{});this.map({recursion_depth:e.recursion_depth,f_kwl:e=>(t(e),e.data),f_kw:e=>(n(e),e.data)})}collect(e){const t=e.f_kwl||(e=>void 0),n=e.f_kw||(e=>void 0);let a=[];return this.iter({f_kwl:e=>{const n=t(e);void 0!==n&&a.push(n)},f_kw:e=>{const t=n(e);void 0!==t&&a.push(t)}}),a}async randomize(e,t){let n={};for(let a of e.state)t&&t.skip_subtree_randomization_if&&await t.skip_subtree_randomization_if(a,null)||(n[a.sys_name]=await saved_subtrees_1.SavedAnonymousSubtree.random(e,a.sys_name,t));return new SavedState(this.format,this.header,n)}}exports.SavedState=SavedState;